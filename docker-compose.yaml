version: "3"
services:
  # ==================================================================================
  # A. Database Setup
  # ==================================================================================

  postgresDbs:
    container_name: PostgresDbs
    image: postgres
    volumes:
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: abc123
      POSTGRES_MULTIPLE_DATABASES: songdb
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: abc123
    ports:
      - "5051:80"

  # ==================================================================================
  # B. Object Storage
  # ==================================================================================

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server --console-address ":9001" /data
    volumes:
      - ./minio-data:/data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://host.docker.internal:9000 minio minio123;
      /usr/bin/mc mb myminio/state;
      /usr/bin/mc mb myminio/object;
      exit 0;
      "

  # ==================================================================================
  # C. OAuth
  # ==================================================================================

  keycloak:
    build: ./docker/
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-export.json
    command: kc.sh start

  # ==================================================================================
  # D. File Management
  # ==================================================================================
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # ==================================================================================
  # E. Search
  # ==================================================================================

  maestro:
    image: ghcr.io/overture-stack/maestro:latest
    depends_on:
      - elasticsearch
    ports:
      - "11235:11235"
    environment:
      # ============================
      # Server configuration
      # ============================
      SERVER_PORT: 11235
      SPRING_MVC_ASYNC_REQUESTTIMEOUT: -1
      MAESTRO_FAILURELOG_DIR: /app/app-data
      MAESTRO_NOTIFICATIONS_SLACK_ENABLED: false
      # ============================
      # Elasticseach Integration
      # ============================
      MAESTRO_ELASTICSEARCH_CLIENT_BASICAUTH_ENABLED: true
      MAESTRO_ELASTICSEARCH_CLIENT_BASICAUTH_PASSWORD: myelasticpassword
      MAESTRO_ELASTICSEARCH_CLIENT_BASICAUTH_USER: elastic
      MAESTRO_ELASTICSEARCH_CLIENT_CONNECTIONTIMEOUT: 300000
      MAESTRO_ELASTICSEARCH_CLIENT_SOCKETTIMEOUT: 300000
      MAESTRO_ELASTICSEARCH_CLIENT_TRUSTSELFSIGNEDCERT: true
      MAESTRO_ELASTICSEARCH_CLUSTERNODES: elasticsearch:9200
      MAESTRO_ELASTICSEARCH_INDEXES_ANALYSISCENTRIC_ENABLED: false
      MAESTRO_ELASTICSEARCH_INDEXES_FILE_CENTRIC_NAME: file_centric_1.0
      # ============================
      # Song Integration
      # ============================
      MAESTRO_REPOSITORIES_0_CODE: song.collab
      MAESTRO_REPOSITORIES_0_COUNTRY: CA
      MAESTRO_REPOSITORIES_0_NAME: local song
      MAESTRO_REPOSITORIES_0_ORGANIZATION: overture
      MAESTRO_REPOSITORIES_0_URL: song:8081
      MAESTRO_SONG_PAGELIMIT: 50
      MAESTRO_SONG_TIMEOUTSEC_ANALYSIS: 3600
      MAESTRO_SONG_TIMEOUTSEC_STUDY: 3600
      # ============================
      # Kafka Integration
      # ============================
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092
      SPRING_CLOUD_STREAM_BINDINGS_SONGINPUT_DESTINATION: song_analysis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1

    environment:
      discovery.type: single-node
      cluster.name: workflow.elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx2048m
      ELASTIC_PASSWORD: myelasticpassword
      xpack.security.enabled: "true"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    ports:
      - 9200:9200
      - 9300:9300

    healthcheck:
      test: "curl --silent --fail localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1"
      interval: 1m30s
      timeout: 50s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.1
    depends_on:
      - elasticsearch
    environment:
      LOGGING_QUIET: "true"
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: myelasticpassword
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    ports:
      - 5601:5601

  arrangerserver:
    image: ghcr.io/overture-stack/arranger-server:0b57cf15
    depends_on:
      - elasticsearch
    environment:
      ES_HOST: http://localhost:9200/
      ES_USER: elastic
      ES_PASS: myelasticpassword
    ports:
      - 5050:5050
    volumes:
      - ./arrangerConfigs:/app/modules/server/configs

  # ==================================================================================
  # F. Discovery
  # ==================================================================================

  stage:
    image: ghcr.io/overture-stack/stage:edge
    ports:
      - "3000:3000"
    environment:
      # ============================
      # Arranger Integration
      # ============================
      NEXT_PUBLIC_ARRANGER_DOCUMENT_TYPE: file
      NEXT_PUBLIC_ARRANGER_INDEX: file_centric_1.0
      NEXT_PUBLIC_ARRANGER_API_URL: http://localhost:5050/
      NEXT_PUBLIC_ARRANGER_MANIFEST_COLUMNS: repository_code, analysis_id, object_id, file_type, file_name, file_size, md5sum, index_object_id, donor_id, sample_id(s), program_id
      # ============================
      # KeyCloak Integration
      # ============================
      NEXT_PUBLIC_AUTH_PROVIDER: keycloak
      ACCESSTOKEN_ENCRYPTION_SECRET: super_secret
      SESSION_ENCRYPTION_SECRET: this_is_a_super_secret_secret
      NEXT_PUBLIC_KEYCLOAK_HOST: keycloak:8080
      NEXT_PUBLIC_KEYCLOAK_REALM: myRealm
      NEXT_PUBLIC_KEYCLOAK_CLIENT_ID: webclient
      KEYCLOAK_CLIENT_SECRET: CLIENT_SECRET
      NEXT_PUBLIC_KEYCLOAK_PERMISSION_AUDIENCE: song

  arranger-ui:
    image: ghcr.io/overture-stack/arranger-ui:a76611f4
    depends_on:
      - stage
    environment:
      REACT_APP_BASE_URL: stage:3000
      REACT_APP_ARRANGER_ADMIN_ROOT: stage:3000/admin/graphql
